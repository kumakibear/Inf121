package multiplePila;

    public class Pila {
        private int tope, max;
        Object[] v = new Object[100];
        Pila(int ca) {
            max = ca;
            tope = 0;
        }   
        boolean esLlena() {
            if (tope == max)
                return true;
            else
                return false;
        }
        boolean esVacia () {
            if (tope == 0)
                return true;
            else
                return false;
        }
        int nElem() {
            return tope;
        }
        public void adicionar(Object item) {
            if (!esLlena()) {
                tope++;
                v[tope] = item;
            }else
                System.out.println("Pila llena");
        }
        Object eliminar() {
            Object item = null;
            if (esVacia ())
                System.out.println("Pila vacia");
            else {
                item = v[tope];
                tope--;
            }
            return item;
        }
        public void vaciar(Pila B) {
            while (!B. esVacia ())
                adicionar(B.eliminar());
        }
        public void mostrar() {
            Object item;
            Pila aux = new Pila(max);
            while (!esVacia())
                aux.adicionar(eliminar());
            while (!aux.esVacia()) {
                item = aux.eliminar();
                System.out.println(item);
                adicionar(item);
            }
        }
        void setMax(int m){
            max = m;
        }
}
